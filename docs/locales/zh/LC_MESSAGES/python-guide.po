# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Chao Wang
# This file is distributed under the same license as the bitproto package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: bitproto 0.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-02-02 22:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../python-guide.rst:4 4d894a70682b4882b008efbd8822ff26
msgid "Python Guide"
msgstr "Python 语言引导"

#: ../../python-guide.rst:6 6c0cf42be70a45d3809c17164184f6ca
msgid "This document will introduce how to use bitproto with Python language."
msgstr "本文将介绍如何在 Python 语言中使用 bitproto 。"

#: ../../python-guide.rst:10 dd260ffc873d49e6bc62b1270bc6859c
msgid "Prerequisites"
msgstr "前提"

#: ../../python-guide.rst:12 599187648b5b4278b7c886bdadda848e
msgid ""
"The python file generated by bitproto file is in Python 3, uses the "
"`typing hint <https://docs.python.org/3/library/typing.html>`_ and "
"`dataclasses <https://docs.python.org/3/library/dataclasses.html>`_. So "
"make sure you are using `Python3.7+ <https://www.python.org/downloads/>`_"
" to use bitproto in Python."
msgstr "bitproto 生成的 Python 代码是基于 Python3 的，因为使用了 "
"`typing hint <https://docs.python.org/3/library/typing.html>`_ 和 "
"`dataclasses <https://docs.python.org/3/library/dataclasses.html>`_. "
"因此，请确保你在使用 `Python3.7+ <https://www.python.org/downloads/>`_ 。"

#: ../../python-guide.rst:18 dffa2c90ac47477aaa0388d984f156a5
msgid "Compile bitproto for Python"
msgstr "编译 bitproto 生成 Python 文件"

#: ../../python-guide.rst:20 0718b7f0fcfa4df78843a4595894a67f
msgid "Firstly, run the bitproto compiler to generate code for Python:"
msgstr "首先，执行 bitproto 的编译器来生成 Python 语言的代码："

#: ../../python-guide.rst:26 9afa9aa9e9f841bbb60d45919d7fe44b
msgid ""
"Where the ``pen.bitproto`` is introduced in earlier section :ref"
":`quickstart-example-bitproto`."
msgstr "其中， ``pen.bitproto`` 已经在前面的章节 "
":ref:`quickstart-example-bitproto` 中做过说明。"

#: ../../python-guide.rst:28 ad9d0a73049d4fcf9db8a7f16e10fe96
msgid ""
"We will find that bitproto generates us a file named ``pen_bp.py``, which"
" contains the mapped classes, constants and api methods etc."
msgstr "我们会发现 bitproto 会在当前目录生成一个文件叫做 ``pen_bp.py`` ，"
"其中包含了映射后的 class，常量和一些方法接口。"

#: ../../python-guide.rst:31 3c58dc64e45c4f85a49000862e74d9a3
msgid "In the generated ``pen_bp.py``:"
msgstr "在生成的 ``pen_bp.py`` 文件中："

#: ../../python-guide.rst:33 02ff2b37ad76451cb18ea54de7118ee3
msgid ""
"The ``enum Color`` in bitproto is mapped to a typing hint alias, and the "
"enum values are mapped to constants:"
msgstr "bitproto 中的 ``enum Color`` 映射到了 Python 的一个 typing hint 的别名，"
"枚举值则映射成了常量："

#: ../../python-guide.rst:44 1a9cfa751d984d10be015e044035bc4b
msgid "The ``Timestamp`` in bitproto is also mapped to a typing hint alias:"
msgstr "bitproto 中的 ``Timestamp`` 类型也被映射成为了一个 typing hint 的别名类型："

#: ../../python-guide.rst:50 0d4b2cddf49a4422b67dbe2731ab1ea3
msgid ""
"The ``message Pen`` in bitproto is mapped to a dataclass decorated class "
"in Python:"
msgstr "bitproto 中的 ``message Pen`` 映射成为了一个被 dataclass 装饰的类："

#: ../../python-guide.rst:60 cf3b8a958c084114a8e07b81bd8d8a5f
msgid ""
"The compiler also generates two method on the class ``Pen``, the encoder "
"and the decoder:"
msgstr "编译器同样生成了 ``Pen`` 的两个方法，一个是编码函数，另一个是解码函数："

#: ../../python-guide.rst:71 4633ecb4a50e479aa219fc9a8621db9c
msgid "Install bitproto Python library"
msgstr "安装 bitproto 的 Python 支持库"

#: ../../python-guide.rst:73 e35a8b65f1dc4b6ab6baa6e0be85ac43
msgid ""
"Bitproto serialization requires a language-specific library to work, the "
"generated encoder and decoder depends on the bitproto Python library "
"underlying."
msgstr "bitproto 序列化需要依赖目标语言的支持库来工作，在这里，"
"我们生成的编解码函数依赖 bitproto 的 Python 语言支持库。"

#: ../../python-guide.rst:76 24147355941845b491e2f6f6508b31b2
msgid ""
"Install the bitproto Python library via `pip <http://pip-"
"installer.org/>`_:"
msgstr "通过 `pip <http://pip-installer.org/>`_ 来安装：""

#: ../../python-guide.rst:82 4976ec1d302d43caaca72704ea5c1c30
msgid ""
"The source code of the bitproto Python library is hosted on `Github "
"<https://github.com/hit9/bitproto/tree/master/lib/py>`_."
msgstr "bitproto 的 Python 支持库的代码存在在"
" `Github <https://github.com/hit9/bitproto/tree/master/lib/py>`_ 上。"

#: ../../python-guide.rst:85 c0b0933048cb4de4b01e45d53545308d
msgid "Run the code"
msgstr "运行代码"

#: ../../python-guide.rst:87 d1424164088b4f3ab42fd41c00342435
msgid "Now, we create a file named ``main.py`` and put the following code in it:"
msgstr "现在，创建一个叫做 ``main.py`` 的文件，包含代码如下："

#: ../../python-guide.rst:105 30afbc740cb14aa2985d26d6d97bd9c0
msgid ""
"In the code above, we firstly create a ``p`` instance of type ``Pen`` "
"with data initilization, then call a method ``p.encode()`` to encode "
"``p`` and return the encoded buffer ``s``, which is an ``bytearray``."
msgstr "在上面的代码中，我们首先创建了一个 ``Pen`` 的实例 ``p`` ，并做了数据的初始化，"
"随后执行了一个叫做 ``p.encode()`` 的函数，把 ``p`` 的数据编码到字节流 ``s`` 中，"
"返回的 ``s`` 是一个 ``bytearray`` 。"

#: ../../python-guide.rst:109 fb0ebef55c1347019a9d14d493295310
msgid ""
"In the decoding part, we construct another ``p1`` instance of type "
"``Pen`` with zero initilization, then call a method ``p1.decode()`` to "
"decode bytes from buffer ``s`` into ``p1``."
msgstr "在解码的部分，我们创建了另一个实例 ``p1`` ，然后调用 ``p1.decode()`` 方法，"
"把字节流 ``s`` 中的数据解码到 ``p1`` 。 "

#: ../../python-guide.rst:112 4adb9c7bdc8648518d973ad09b0d98a8
msgid ""
"The compiler also generates a method ``to_json()`` to return the json "
"string format of the structure."
msgstr "编译器同样生成了一个叫做 ``to_json()`` 的方法来输出结构化数据的 json 格式字符串。"

#: ../../python-guide.rst:114 f86424d8f59248149840fa1c5dbb9e35
msgid "Let's run it:"
msgstr "现在执行它："

